 #!/usr/bin/env python
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, String
from sqlalchemy.types import NUMERIC
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
Base=declarative_base()
class Test(Base):
    __tablename__='new'
    id = Column(Integer, primary_key=True)
    name = Column(String(100))
    value = Column(NUMERIC)
    
engine = create_engine('sqlite:///example.db', echo=True)
Base.metadata.create_all(engine)
Session= sessionmaker(bind=engine)
session=Session()
for test in session.query(Test).all():
    print (test.id, test.name, test.value)
new_test= Test(
    id=3,
    name=u'ORM',
    value=4.5
    )
session.add(new_test)
session.commit()

Zadanie1-2

 #!/usr/bin/env python
#encoding: utf-8

import sqlite3

connection=sqlite3.connect('example2.db')
cursor=connection.cursor()
cursor.execute('''CREATE TABLE IF NOT EXISTS table (id integer, name text, wiek integer)''')
cursor.execute('''INSERT INTO table VALUES (1, 'Agata', 19)''')
cursor.execute('''INSERT INTO table VALUES (2, 'Marcin', 20)''')
cursor.execute('''INSERT INTO table VALUES (2, 'Karolina', 21)''')
cursor.execute('''DELETE FROM table WHERE wiek=21 ''')
connection.commit()
connection.rollback()
for row in cursor.execute('SELECT * FROM table'):
    print row
connection.close()

Zadanie 3-4

 #!/usr/bin/env python
#encoding: utf-8

from sqlalchemy import Column, Integer, String
from sqlalchemy.types import NUMERIC
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

Base=declarative_base()
class Ksiazka(Base):
    __tablename__='test2'
    id=Column(Integer, primary_key=True)
    nazwa=Column(String(100))
    wartosc=Column(Integer)
class Student(Base):
    __tablename__='test3'
    id=Column(Integer, primary_key=True)
    imie=Column(String(100))
    book_id=Column(Integer)
engine=create_engine('sqlite:///example52.db', echo=True)
Base.metadata.create_all(engine)
Session=sessionmaker(bind=engine)
session=Session()
new_data2=Student(
    id=1,
    imie=u'Damian Jedlinski',
)
new_data=Ksiazka(
    id=1,
    nazwa=u'Harry Potter',
    wartosc=40
)
session.add(new_data)
new_data=Ksiazka(
    id=2,
    nazwa=u'Wladca Pierscieni',
    wartosc=50
)
session.add(new_data)
session.commit()

for data1 in session.query(Student).all():
    print (data1.id, data1.imie, data1.book_id)
for data1 in session.query(Ksiazka).all():
    print (data1.id, data1.nazwa, data1.wartosc)
