#!/usr/bin/env python

import logging

def main():
    logging.basicConfig(filename="app.log",
        level=logging.DEBUG)
    logging.warning("warn")
    logging.info("inf")
    logging.debug("deb")

print("main"+__name__)
if __name__ =="__main__":
    main()
#logger= logging.getLogger(__name__)
#logger.info("info")
#logger.debug("debug")
#logger.warning("warning")

#############################
import pdb


def funkcja():
    i=0
    while i <5:
        print i
        i+=1
a="a"
pdb.set_trace()
b="b"
funkcja()
c="c"
res=a+b+c
print(res)

#############################
Kalkulator

#!/usr/bin/python3
#encoding: utf-8
from Tkinter import *

class Calculator:
    def __init__(self, master):
        self.master= master
        master.title("Kalkulator")
        self.screen= Text(master, state='disabled', width=60, height=6, background="white")
        self.screen.grid(row=0,column=0,columnspan=4,padx=5,pady=5)
        self.screen.configure(state='normal')
        self.equation=''
        buttons=[b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16]
        b1 = self.createButton(1)
        b2 = self.createButton(2)
        b3 = self.createButton(3)
        b4 = self.createButton('+')
        b5 = self.createButton(4)
        b6 = self.createButton(5)
        b7 = self.createButton(6)
        b8 = self.createButton('-')
        b9 = self.createButton(7)
        b10 = self.createButton(8)
        b11 = self.createButton(9)
        b12 = self.createButton('*')
        b13 = self.createButton(0)
        b14 = self.createButton('/')
        b15 = self.createButton('.')
        b16 = self.createButton('=')
        licznik=0
        for rzad in range(1,5):
            for kolumna in range(4):
                buttons[licznik].grid(row=rzad,column=kolumna)
                licznik+=1
        
        def createButton(self,val,write=True,width=7):
            return Button(self.master, text=val,command=lambda:self.click(val,write), width=width)
        
        def click(self,text,write):
            if write==None:
                if text== '=' and self.equation:
                    self.equation=re.sub(u"\u00F7", '/', self.equation)
                    print(self.equation)
                    wyswielt=str(eval(self.equation))
                    self.clear_screen()
                    self.insert_screen(wyswietl,newLine=True)
                elif text==u"\u232B":
                    self.clear_screen()
            else:
                self_inert_screen(text)
        
        def clear_screen(self):
            self.equation=''
            self.screen.configure(state='normal')
            self.screen.delete('1.0',END)
            
        def insert_screen(self,value,newline=False):
            self.screen.configure(state='normal')
            self.screen.insert(END,value)
            self.eqation+=str(value)
            self.screen.configure(state='disabled')
        
    
    
Kalkulator=tkinter.Tk()

Kalkulator.mainloop()


##################################
Zadanie 1

#!/usr/bin/env python
#encoding: utf-8

import logging

def main():
    logging.basicConfig(filename="kalkulator.py", level=logging.INFO)
    logging.info("witam")
    logging.debug("deb")
    logging.warn("uwazaj")

if __name__=="__main__":
    main()

